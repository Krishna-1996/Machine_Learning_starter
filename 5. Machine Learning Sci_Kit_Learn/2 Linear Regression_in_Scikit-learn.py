# 2. Linear Regression in Scikit-learn
# 2. Linear Regression in Scikit-learn

 

import pandas as pd
from sklearn.datasets import load_iris
iris = load_iris()
df  = pd.DataFrame(data = iris.data, columns = iris.feature_names)
print(df.head())#print the whole dataset
df.shape
print(df.plot.scatter(x= 'petal width (cm)', y = 'petal length (cm)', title = 'ScatterPlot'))


print(df.corr())
print(df.describe())

# Preprocessing
y = df['petal width (cm)'].values.reshape(-1,1)
x = df['petal length (cm)'].values.reshape(-1,1)

from sklearn.model_selection import train_test_split
X_train, X_test, Y_train, Y_test = train_test_split(x,y, test_size=0.2)

# Training the model
from sklearn.linear_model import LinearRegression
model = LinearRegression()
model.fit(X_train, Y_train)
print("intercept: ",model.intercept_)
print("coefficient: ",model.coef_)

# Model Prediction
score = model.predict([[7.5]])
print(score)

y_prec = model.predict(X_test)
df_prec = pd.DataFrame({'Actual: ',Y_test.squeeze(), "Predicted: ",y_prec.squeeze()})

# Evaluate the Model
from sklearn.metrics import mean_absolute_error, mean_squared_error
mse = mean_squared_error(Y_test, y_prec)
mae = mean_absolute_error(Y_test, y_prec)
print("mean_absolute_error: ", mae, "mean_squared_error: ",mse)

























































































































































































































































































































































































































































































































































